<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.1" halcon_version="12.0">
<procedure name="main">
<interface/>
<body>
<c as_id="ocr" as_name="OCR 01" as_grp="[1,1]" as_ord="1">* OCR 01: Code generated by OCR 01</c>
<c as_id="ocr" as_name="OCR 01" as_grp="[2,1]" as_ord="1">* OCR 01: </c>
<c as_id="ocr" as_name="OCR 01" as_grp="[2,1]" as_ord="2">* OCR 01: Prepare text model</c>
<c as_id="ocr" as_name="OCR 01" as_grp="[2,1]" as_ord="3">* OCR 01: </c>
<l as_id="ocr" as_name="OCR 01" as_grp="[2,1]" as_ord="4">create_text_model_reader ('manual', [], TextModel)</l>
<l as_id="ocr" as_name="OCR 01" as_grp="[2,2]" as_ord="1">set_text_model_param (TextModel, 'stroke_width', 5)</l>
<l as_id="ocr" as_name="OCR 01" as_grp="[2,2]" as_ord="2">set_text_model_param (TextModel, 'fragment_size_min', 5)</l>
<l as_id="ocr" as_name="OCR 01" as_grp="[2,2]" as_ord="3">set_text_model_param (TextModel, 'eliminate_border_blobs', 'true')</l>
<l as_id="ocr" as_name="OCR 01" as_grp="[2,2]" as_ord="4">set_text_model_param (TextModel, 'base_line_tolerance', 0.2)</l>
<l as_id="ocr" as_name="OCR 01" as_grp="[2,2]" as_ord="5">set_text_model_param (TextModel, 'max_line_num', 2)</l>
<c as_id="ocr" as_name="OCR 01" as_grp="[2,3]" as_ord="1">* OCR 01: </c>
<c as_id="ocr" as_name="OCR 01" as_grp="[2,3]" as_ord="2">* OCR 01: Load classifier</c>
<c as_id="ocr" as_name="OCR 01" as_grp="[2,3]" as_ord="3">* OCR 01: </c>
<l as_id="ocr" as_name="OCR 01" as_grp="[2,3]" as_ord="4">read_ocr_class_mlp ('Industrial_NoRej.omc', OcrHandle)</l>
<c as_id="ocr" as_name="OCR 01" as_grp="[3,1]" as_ord="1">* OCR 01: ***************************************************************</c>
<c as_id="ocr" as_name="OCR 01" as_grp="[3,1]" as_ord="2">* OCR 01: * The code which follows is to be executed once / image       *</c>
<c as_id="ocr" as_name="OCR 01" as_grp="[3,1]" as_ord="3">* OCR 01: ***************************************************************</c>
<c as_id="ocr" as_name="OCR 01" as_grp="[3,1]" as_ord="4">* OCR 01: </c>
<c as_id="ocr" as_name="OCR 01" as_grp="[3,1]" as_ord="5">* OCR 01: Load image</c>
<l as_id="ocr" as_name="OCR 01" as_grp="[3,1]" as_ord="6">read_image (Image, 'D:/Halcon机器视觉教程258581/halcon视频教程素材/9-6/素材.png')</l>
<c as_id="ocr" as_name="OCR 01" as_grp="[4,1]" as_ord="1">* OCR 01: </c>
<c as_id="ocr" as_name="OCR 01" as_grp="[4,1]" as_ord="2">* OCR 01: Perform actual processing (once per ROI)</c>
<c as_id="ocr" as_name="OCR 01" as_grp="[4,3]" as_ord="1">* OCR 01: Generate regions of interest</c>
<l as_id="ocr" as_name="OCR 01" as_grp="[4,2]" as_ord="1">gen_rectangle1 (ROI_OCR_01_0, 114.214, 98.5, 227.538, 495.079)</l>
<c as_id="ocr" as_name="OCR 01" as_grp="[4,3]" as_ord="1">* OCR 01: </c>
<c as_id="ocr" as_name="OCR 01" as_grp="[4,3]" as_ord="2">* OCR 01: Extract symbol regions (segmentation step)</c>
<c as_id="ocr" as_name="OCR 01" as_grp="[4,3]" as_ord="3">* OCR 01: Only consider first channel for color images</c>
<l as_id="ocr" as_name="OCR 01" as_grp="[4,3]" as_ord="4">access_channel (Image, TmpObj_Mono, 1)</l>
<l as_id="ocr" as_name="OCR 01" as_grp="[4,3]" as_ord="5">reduce_domain (TmpObj_Mono, ROI_OCR_01_0, TmpObj_MonoReduced_OCR_01_0)</l>
<c as_id="ocr" as_name="OCR 01" as_grp="[4,3]" as_ord="6">* OCR 01: </c>
<c as_id="ocr" as_name="OCR 01" as_grp="[4,3]" as_ord="7">* OCR 01: Orientation Correction (for consistent border and domain</c>
<c as_id="ocr" as_name="OCR 01" as_grp="[4,3]" as_ord="8">* OCR 01: handling, this is always applied, even with no rotation)</c>
<c as_id="ocr" as_name="OCR 01" as_grp="[4,3]" as_ord="9">* OCR 01: </c>
<l as_id="ocr" as_name="OCR 01" as_grp="[4,3]" as_ord="10">hom_mat2d_identity (TmpCtrl_MatrixIdentity)</l>
<c as_id="ocr" as_name="OCR 01" as_grp="[4,3]" as_ord="11">* OCR 01: Apply transformation to image and domain</c>
<l as_id="ocr" as_name="OCR 01" as_grp="[4,3]" as_ord="12">get_domain (TmpObj_MonoReduced_OCR_01_0, TmpObj_Domain)</l>
<l as_id="ocr" as_name="OCR 01" as_grp="[4,3]" as_ord="13">get_system ('clip_region', TmpCtrl_ClipRegion)</l>
<l as_id="ocr" as_name="OCR 01" as_grp="[4,3]" as_ord="14">set_system ('clip_region', 'false')</l>
<l as_id="ocr" as_name="OCR 01" as_grp="[4,3]" as_ord="15">dilation_circle (TmpObj_Domain, TmpObj_DomainExpanded, 25)</l>
<l as_id="ocr" as_name="OCR 01" as_grp="[4,3]" as_ord="16">affine_trans_region (TmpObj_DomainExpanded, TmpObj_DomainTransformedRaw, TmpCtrl_MatrixIdentity, 'true')</l>
<l as_id="ocr" as_name="OCR 01" as_grp="[4,3]" as_ord="17">smallest_rectangle1 (TmpObj_DomainTransformedRaw, TmpCtrl_Row1, TmpCtrl_Col1, TmpCtrl_Row2, TmpCtrl_Col2)</l>
<l as_id="ocr" as_name="OCR 01" as_grp="[4,3]" as_ord="18">hom_mat2d_translate (TmpCtrl_MatrixIdentity, -TmpCtrl_Row1, -TmpCtrl_Col1, TmpCtrl_MatrixTranslation)</l>
<l as_id="ocr" as_name="OCR 01" as_grp="[4,3]" as_ord="19">hom_mat2d_compose (TmpCtrl_MatrixTranslation, TmpCtrl_MatrixIdentity, TmpCtrl_MatrixComposite)</l>
<l as_id="ocr" as_name="OCR 01" as_grp="[4,3]" as_ord="20">affine_trans_region (TmpObj_Domain, TmpObj_DomainTransformed, TmpCtrl_MatrixComposite, 'true')</l>
<l as_id="ocr" as_name="OCR 01" as_grp="[4,3]" as_ord="21">affine_trans_image (TmpObj_MonoReduced_OCR_01_0, TmpObj_ImageTransformed, TmpCtrl_MatrixComposite, 'constant', 'true')</l>
<l as_id="ocr" as_name="OCR 01" as_grp="[4,3]" as_ord="22">dilation_circle (TmpObj_Domain, TmpObj_DomainExpanded, 25)</l>
<l as_id="ocr" as_name="OCR 01" as_grp="[4,3]" as_ord="23">expand_domain_gray (TmpObj_ImageTransformed, TmpObj_ImageTransformedExpanded, 25)</l>
<l as_id="ocr" as_name="OCR 01" as_grp="[4,3]" as_ord="24">reduce_domain (TmpObj_ImageTransformed, TmpObj_DomainTransformed, TmpObj_ImageTransformedReduced)</l>
<l as_id="ocr" as_name="OCR 01" as_grp="[4,3]" as_ord="25">crop_part (TmpObj_ImageTransformedReduced, TmpObj_MonoReduced_OCR_01_0, 0, 0, TmpCtrl_Col2-TmpCtrl_Col1+1, TmpCtrl_Row2-TmpCtrl_Row1+1)</l>
<l as_id="ocr" as_name="OCR 01" as_grp="[4,3]" as_ord="26">set_system ('clip_region', TmpCtrl_ClipRegion)</l>
<l as_id="ocr" as_name="OCR 01" as_grp="[4,3]" as_ord="27">find_text (TmpObj_MonoReduced_OCR_01_0, TextModel, TmpCtrl_ResultHandle_OCR_01_0)</l>
<c as_id="ocr" as_name="OCR 01" as_grp="[4,4]" as_ord="1">* OCR 01: </c>
<c as_id="ocr" as_name="OCR 01" as_grp="[4,4]" as_ord="2">* OCR 01: Read text (classification step)</c>
<l as_id="ocr" as_name="OCR 01" as_grp="[4,4]" as_ord="3">get_text_object (Symbols_OCR_01_0, TmpCtrl_ResultHandle_OCR_01_0, 'all_lines')</l>
<l as_id="ocr" as_name="OCR 01" as_grp="[4,4]" as_ord="4">clear_text_result (TmpCtrl_ResultHandle_OCR_01_0)</l>
<l as_id="ocr" as_name="OCR 01" as_grp="[4,4]" as_ord="5">dev_display (TmpObj_MonoReduced_OCR_01_0)</l>
<l as_id="ocr" as_name="OCR 01" as_grp="[4,4]" as_ord="6">dev_set_draw ('fill')</l>
<l as_id="ocr" as_name="OCR 01" as_grp="[4,4]" as_ord="7">dev_set_colored (3)</l>
<l as_id="ocr" as_name="OCR 01" as_grp="[4,4]" as_ord="8">dev_display (Symbols_OCR_01_0)</l>
<l as_id="ocr" as_name="OCR 01" as_grp="[4,4]" as_ord="9">do_ocr_multi_class_mlp (Symbols_OCR_01_0, TmpObj_MonoReduced_OCR_01_0, OcrHandle, SymbolNames_OCR_01_0, Confidences_OCR_01_0)</l>
<c as_id="ocr" as_name="OCR 01" as_grp="[4,4]" as_ord="10">* OCR 01: </c>
<c as_id="ocr" as_name="OCR 01" as_grp="[4,4]" as_ord="11">* OCR 01: Do something with the results</c>
<c as_id="ocr" as_name="OCR 01" as_grp="[6,1]" as_ord="1">* OCR 01: </c>
<c as_id="ocr" as_name="OCR 01" as_grp="[6,1]" as_ord="2">* OCR 01: Cleanup (global)</c>
<l as_id="ocr" as_name="OCR 01" as_grp="[6,1]" as_ord="3">clear_text_model (TextModel)</l>
<l as_id="ocr" as_name="OCR 01" as_grp="[6,2]" as_ord="1">clear_ocr_class_mlp (OcrHandle)</l>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
</hdevelop>
