<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.1" halcon_version="12.0">
<procedure name="main">
<interface/>
<body>
<l>dev_close_window ()</l>
<l>dev_open_window (0, 0, 960, 430, 'black', WindowHandle)</l>
<c>* Image Acquisition 01: Code generated by Image Acquisition 01</c>
<c as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,1]" as_ord="1">* Image Acquisition 01: Code generated by Image Acquisition 01</c>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,2]" as_ord="1">list_files ('C:/Users/Administrator/Desktop/深度学习/视觉/防尘胶实例/防尘胶图片', ['files','follow_links'], ImageFiles)</l>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,3]" as_ord="1">tuple_regexp_select (ImageFiles, ['\\.(tif|tiff|gif|bmp|jpg|jpeg|jp2|png|pcx|pgm|ppm|pbm|xwd|ima|hobj)$','ignore_case'], ImageFiles)</l>
<l>a:=[]</l>
<l>b:=0</l>
<l>c:=[]</l>
<c></c>
<c></c>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[2,2]" as_ord="1">for Index := 0 to |ImageFiles| - 1 by 1</l>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[2,3]" as_ord="1">    read_image (Image, ImageFiles[Index])</l>
<c as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[2,4]" as_ord="1">    * Image Acquisition 01: Do something</c>
<l>    rgb1_to_gray (Image, GrayImage)</l>
<l>    threshold (GrayImage, Regions, 0, 39)</l>
<l>    connection (Regions, ConnectedRegions)</l>
<l>    opening_rectangle1 (ConnectedRegions, RegionOpening, 8, 8)</l>
<l>    select_shape (RegionOpening, SelectedRegions, 'column', 'and', 525.62, 1785.62)</l>
<l>    union1 (SelectedRegions, RegionUnion)</l>
<l>    smallest_rectangle2 (RegionUnion, Row, Column, Phi, Length1, Length2)</l>
<l>    gen_rectangle2 (Rectangle, Row, Column, Phi, Length1, Length2+50)</l>
<l>    reduce_domain (GrayImage, Rectangle, ImageReduced)</l>
<l>    vector_angle_to_rigid (Row, Column, Phi, Row, Column, 0, HomMat2D)</l>
<l>    affine_trans_image (ImageReduced, ImageAffinTrans, HomMat2D, 'constant', 'true')</l>
<l>    threshold (ImageAffinTrans, Regions1, 0, 39)</l>
<l>    opening_rectangle1 (Regions1, RegionOpening1, 8, 8)</l>
<l>    connection (RegionOpening1, ConnectedRegions1)</l>
<l>    select_shape (ConnectedRegions1, SelectedRegions1, 'column', 'and', 400, 1600.82)</l>
<l>    union1 (SelectedRegions1, RegionUnion1)</l>
<l>    smallest_rectangle1 (RegionUnion1, Row1, Column1, Row2, Column2)</l>
<l>    gen_rectangle1 (Rectangle1, Row1, Column1, Row2, Column2)</l>
<l>    dilation_rectangle1 (Rectangle1, RegionDilation, 5, 20)</l>
<l>    reduce_domain (ImageAffinTrans, RegionDilation, ImageReduced1)</l>
<l>    threshold (ImageReduced1, Regions2, 2, 26)</l>
<l>    opening_circle (Regions2, RegionOpening2, 3.5)</l>
<l>    connection (RegionOpening2, ConnectedRegions2)</l>
<l>    select_shape (ConnectedRegions2, SelectedRegions2, ['row','column'], 'and', [0,1062.39], [170.64,2000.01])</l>
<l>    union1 (SelectedRegions2, RegionUnion2)</l>
<l>    area_center (RegionUnion2, Area, Row3, Column3)</l>
<l>    gen_circle (Circle, Row3, Column3, 31.5)</l>
<l>    gen_rectangle1 (Rectangle2, Row3+150, Column3-900, Row3+972, Column3+120)</l>
<l>    threshold (ImageReduced1, Regions3, 56, 191)</l>
<l>    fill_up (Regions3, RegionFillUp)</l>
<l>    opening_circle (RegionFillUp, RegionOpening3, 3.5)</l>
<l>    connection (RegionOpening3, ConnectedRegions3)</l>
<l>    select_shape (ConnectedRegions3, SelectedRegions3, 'area', 'and', 501855, 1e+006)</l>
<l>    difference (Rectangle2, SelectedRegions3, RegionDifference1)</l>
<l>    opening_circle (RegionDifference1, RegionOpening4, 8)</l>
<l>    area_center (RegionOpening4, Area1, Row4, Column4)</l>
<l>    if (Area1&lt;190000)</l>
<l>        a:=['NG']</l>
<l>    else</l>
<l>        a:=['OK']</l>
<l>    endif</l>
<l>    tuple_regexp_match (ImageFiles, 'test_(...)', Matches)</l>
<l>    c:=[c,Matches[Index]+a+'  ']</l>
<l>*     stop()</l>
<l>endfor</l>
<l>open_file ('C:/Users/Administrator/Desktop/深度学习/视觉/防尘胶实例/防尘胶实例1.txt', 'output', FileHandle)</l>
<l>fwrite_string (FileHandle, c)</l>
<l>close_all_files ()</l>
<c></c>
<c></c>
<c></c>
<c></c>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
</hdevelop>
